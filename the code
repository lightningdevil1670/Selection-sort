#include<iostream>
#include<bits/stdc++.h>
using namespace std;

void selectionsort( int a[], int n)
{
	int i, min, j;
	for(i=0; i<n-1; i++) // this to have required number of pass (n-1)
	{
		min = i; // we assume that the  first element of the insorted array is the smallest, and then we compare it to every other element right to it
		for(j=i+1; j<n;j++)
		{
			if(a[j]<a[min]) // so when j increments it compares with the value of updated min value, if there was any update in min value before passes
			{
				min = j;
			}
		}
		if(min != i) // so to check if there was any update to min value, if yes, we swap, if no, then that means our value at i is smallest in the unsorted array
		{
			swap(a[i],a[min]);
		}
	}
}
void printarray(int a[], int n)
{
	cout<<"sorted array:"<< endl;
	for( int i=0; i<n;i++)
	{
		cout<<a[i];
	}
}

int main()
{
	int a[1000], n , i ,j;
	cin>>n;
	for( int i=0; i<n;i++)
	{
		cin>>a[i];
	}
	selectionsort(a,n);
	printarray(a,n);
	return 0;
}
